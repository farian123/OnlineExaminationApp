@model OnlineExaminationAppp.Models.CourseCreateViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Course</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.CourseName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCode, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.CourseCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Credit, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.Credit, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Credit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseDuration, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.CourseDuration, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseDuration)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-5" for="Outline">Outline</label>
            <div class="col-md-7">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Fees, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.Fees, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Fees)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-5" for="SubjectName">Organization</label>
            <div class="col-md-7">
                @Html.DropDownListFor(x => Model.OrganizationId, Model.OrganizationListItems,"--Select--", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.OrganizationId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tag, new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.TextBoxFor(model => model.Tag, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tag)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-11">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

